---
import type { GetStaticPaths } from "astro";

// Database
import hooks from "@/data/hooks";

// Utils
import { parseTS } from "@/utils/content-parser";

// SubComponents
import ItemPage from "@/components/astro/item-page.astro";

export const getStaticPaths = (() => 
   Object.keys(hooks).map((key) => ({ params: { id: key } }))
) satisfies GetStaticPaths;

const { id } = Astro.params;
const hook = hooks[id as keyof typeof hooks];
const { filename } = hook;
const itemType = "hook";

const [reactCode, preactCode] = await Promise.all([
  await parseTS({
    filename, library: "react", type: itemType, external: true
  }),
  await parseTS({
    filename, library: "preact", type: itemType, external: true
  })
]);

const code = {
  preact: preactCode,
  react: reactCode,
  solid: undefined
};
---

<ItemPage
  code={code}
  item={hook}
  itemType={itemType}
/>